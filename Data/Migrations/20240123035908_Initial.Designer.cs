// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240123035908_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("Data.Entities.CommentEntity", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CommentAuthor")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("CommentContent")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("PostId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CommentId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            CommentId = 1,
                            CommentAuthor = "Użytkownik1",
                            CommentContent = "Świetny post!",
                            CommentDate = new DateTime(2024, 1, 21, 4, 59, 7, 846, DateTimeKind.Local).AddTicks(9186),
                            PostId = 1
                        },
                        new
                        {
                            CommentId = 2,
                            CommentAuthor = "Użytkownik2",
                            CommentContent = "Ciekawe spostrzeżenia!",
                            CommentDate = new DateTime(2024, 1, 22, 4, 59, 7, 846, DateTimeKind.Local).AddTicks(9234),
                            PostId = 1
                        },
                        new
                        {
                            CommentId = 3,
                            CommentAuthor = "Użytkownik3",
                            CommentContent = "Mam pytanie...",
                            CommentDate = new DateTime(2024, 1, 22, 22, 59, 7, 846, DateTimeKind.Local).AddTicks(9236),
                            PostId = 2
                        },
                        new
                        {
                            CommentId = 4,
                            CommentAuthor = "Użytkownik4",
                            CommentContent = "Dobrze napisane!",
                            CommentDate = new DateTime(2024, 1, 23, 4, 29, 7, 846, DateTimeKind.Local).AddTicks(9238),
                            PostId = 3
                        },
                        new
                        {
                            CommentId = 5,
                            CommentAuthor = "Użytkownik5",
                            CommentContent = "Zgadzam się całkowicie!",
                            CommentDate = new DateTime(2024, 1, 23, 4, 58, 57, 846, DateTimeKind.Local).AddTicks(9241),
                            PostId = 3
                        });
                });

            modelBuilder.Entity("Data.Entities.PostEntity", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PostAuthor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostContent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("TagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PostId");

                    b.HasIndex("TagId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            PostAuthor = "Janek",
                            PostContent = "Lorem Lorem",
                            PostDate = new DateTime(2024, 1, 23, 4, 59, 7, 846, DateTimeKind.Local).AddTicks(9271),
                            TagId = 1
                        },
                        new
                        {
                            PostId = 2,
                            PostAuthor = "Grzegorz",
                            PostContent = "Kocham jak nie działa mi w projekcie identity.",
                            PostDate = new DateTime(2024, 1, 23, 4, 59, 7, 846, DateTimeKind.Local).AddTicks(9274),
                            TagId = 2
                        },
                        new
                        {
                            PostId = 3,
                            PostAuthor = "Ania",
                            PostContent = "ZZZZZ",
                            PostDate = new DateTime(2024, 1, 23, 4, 59, 7, 846, DateTimeKind.Local).AddTicks(9276),
                            TagId = 3
                        },
                        new
                        {
                            PostId = 4,
                            PostAuthor = "Kasia",
                            PostContent = "Tragiczna dziś podoga!",
                            PostDate = new DateTime(2024, 1, 23, 4, 59, 7, 846, DateTimeKind.Local).AddTicks(9277),
                            TagId = 4
                        },
                        new
                        {
                            PostId = 5,
                            PostAuthor = "Alex",
                            PostContent = "Kocham Kraków.",
                            PostDate = new DateTime(2024, 1, 23, 4, 59, 7, 846, DateTimeKind.Local).AddTicks(9279),
                            TagId = 5
                        },
                        new
                        {
                            PostId = 6,
                            PostAuthor = "Michał",
                            PostContent = "Nowe odkrycia archeologiczne na Bliskim Wschodzie.",
                            PostDate = new DateTime(2024, 1, 22, 4, 59, 7, 846, DateTimeKind.Local).AddTicks(9280),
                            TagId = 1
                        },
                        new
                        {
                            PostId = 7,
                            PostAuthor = "Karolina",
                            PostContent = "Najnowsze trendy w świecie mody.",
                            PostDate = new DateTime(2024, 1, 21, 4, 59, 7, 846, DateTimeKind.Local).AddTicks(9282),
                            TagId = 2
                        },
                        new
                        {
                            PostId = 8,
                            PostAuthor = "Piotrek",
                            PostContent = "Odkryto nowe gatunki roślin w dżungli Amazonii.",
                            PostDate = new DateTime(2024, 1, 20, 4, 59, 7, 846, DateTimeKind.Local).AddTicks(9283),
                            TagId = 3
                        },
                        new
                        {
                            PostId = 9,
                            PostAuthor = "Magda",
                            PostContent = "Porównanie aparatów fotograficznych: Canon vs Nikon.",
                            PostDate = new DateTime(2024, 1, 19, 4, 59, 7, 846, DateTimeKind.Local).AddTicks(9285),
                            TagId = 4
                        },
                        new
                        {
                            PostId = 10,
                            PostAuthor = "Bartek",
                            PostContent = "Przyszłość sztucznej inteligencji.",
                            PostDate = new DateTime(2024, 1, 18, 4, 59, 7, 846, DateTimeKind.Local).AddTicks(9286),
                            TagId = 5
                        },
                        new
                        {
                            PostId = 11,
                            PostAuthor = "Monika",
                            PostContent = "Rekordy Guinnessa w sporcie.",
                            PostDate = new DateTime(2024, 1, 17, 4, 59, 7, 846, DateTimeKind.Local).AddTicks(9288),
                            TagId = 1
                        },
                        new
                        {
                            PostId = 12,
                            PostAuthor = "Tomasz",
                            PostContent = "Historia rozwoju technologii komputerowej.",
                            PostDate = new DateTime(2024, 1, 16, 4, 59, 7, 846, DateTimeKind.Local).AddTicks(9289),
                            TagId = 2
                        },
                        new
                        {
                            PostId = 13,
                            PostAuthor = "Ola",
                            PostContent = "Badania nad życiem pozaziemskim.",
                            PostDate = new DateTime(2024, 1, 15, 4, 59, 7, 846, DateTimeKind.Local).AddTicks(9291),
                            TagId = 3
                        },
                        new
                        {
                            PostId = 14,
                            PostAuthor = "Łukasz",
                            PostContent = "Nowości na rynku samochodowym.",
                            PostDate = new DateTime(2024, 1, 14, 4, 59, 7, 846, DateTimeKind.Local).AddTicks(9292),
                            TagId = 4
                        },
                        new
                        {
                            PostId = 15,
                            PostAuthor = "Natalia",
                            PostContent = "Kulinarne podróże po świecie.",
                            PostDate = new DateTime(2024, 1, 13, 4, 59, 7, 846, DateTimeKind.Local).AddTicks(9294),
                            TagId = 5
                        });
                });

            modelBuilder.Entity("Data.Entities.TagEntity", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TagTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TagId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            TagId = 1,
                            TagTitle = "Rozrywka"
                        },
                        new
                        {
                            TagId = 2,
                            TagTitle = "Nauka"
                        },
                        new
                        {
                            TagId = 3,
                            TagTitle = "Polityka"
                        },
                        new
                        {
                            TagId = 4,
                            TagTitle = "Zdrowie"
                        },
                        new
                        {
                            TagId = 5,
                            TagTitle = "Sport"
                        },
                        new
                        {
                            TagId = 6,
                            TagTitle = "Technologia"
                        },
                        new
                        {
                            TagId = 7,
                            TagTitle = "Rozwój"
                        },
                        new
                        {
                            TagId = 8,
                            TagTitle = "Odkrycia"
                        },
                        new
                        {
                            TagId = 9,
                            TagTitle = "Podróże"
                        },
                        new
                        {
                            TagId = 10,
                            TagTitle = "Innowacje"
                        });
                });

            modelBuilder.Entity("Data.Entities.CommentEntity", b =>
                {
                    b.HasOne("Data.Entities.PostEntity", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Data.Entities.PostEntity", b =>
                {
                    b.HasOne("Data.Entities.TagEntity", "Tag")
                        .WithMany("Posts")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Data.Entities.PostEntity", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Data.Entities.TagEntity", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
