// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240122221142_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("Data.Entities.CommentEntity", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CommentAuthor")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("CommentContent")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("PostId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CommentId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            CommentId = 1,
                            CommentAuthor = "Karolina",
                            CommentContent = "Już nie mogę się doczekać!",
                            CommentDate = new DateTime(2024, 1, 22, 23, 11, 41, 919, DateTimeKind.Local).AddTicks(3917),
                            PostId = 1
                        },
                        new
                        {
                            CommentId = 2,
                            CommentAuthor = "Milena",
                            CommentContent = "Słabo im szło w tym sezonie.",
                            CommentDate = new DateTime(2024, 1, 22, 23, 11, 41, 919, DateTimeKind.Local).AddTicks(3967),
                            PostId = 2
                        },
                        new
                        {
                            CommentId = 3,
                            CommentAuthor = "Andrzej",
                            CommentContent = "Tak, doszło do trzykrotnego zwiększenia jej wielkości.",
                            CommentDate = new DateTime(2024, 1, 22, 23, 11, 41, 919, DateTimeKind.Local).AddTicks(3969),
                            PostId = 3
                        },
                        new
                        {
                            CommentId = 4,
                            CommentAuthor = "Karol",
                            CommentContent = "Oczywiście, że Toyota!",
                            CommentDate = new DateTime(2024, 1, 22, 23, 11, 41, 919, DateTimeKind.Local).AddTicks(3971),
                            PostId = 4
                        },
                        new
                        {
                            CommentId = 5,
                            CommentAuthor = "Sam",
                            CommentContent = "Najgorsze jest to, że na premierę na PC poczekamy pewnie do 2027.",
                            CommentDate = new DateTime(2024, 1, 22, 23, 11, 41, 919, DateTimeKind.Local).AddTicks(3972),
                            PostId = 5
                        });
                });

            modelBuilder.Entity("Data.Entities.PostEntity", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PostAuthor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostContent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("TagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PostId");

                    b.HasIndex("TagId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            PostAuthor = "Janek",
                            PostContent = "W 2025 wybory na prezydenta!",
                            PostDate = new DateTime(2024, 1, 22, 23, 11, 41, 919, DateTimeKind.Local).AddTicks(3998),
                            TagId = 1
                        },
                        new
                        {
                            PostId = 2,
                            PostAuthor = "Grzegorz",
                            PostContent = "Real Madryt odpadł z ligi mistrzów.",
                            PostDate = new DateTime(2024, 1, 22, 23, 11, 41, 919, DateTimeKind.Local).AddTicks(4001),
                            TagId = 2
                        },
                        new
                        {
                            PostId = 3,
                            PostAuthor = "Ania",
                            PostContent = "Wiatr słoneczny zniekształcił atmosfere marsa!",
                            PostDate = new DateTime(2024, 1, 22, 23, 11, 41, 919, DateTimeKind.Local).AddTicks(4003),
                            TagId = 3
                        },
                        new
                        {
                            PostId = 4,
                            PostAuthor = "Kasia",
                            PostContent = "Toyota Supra vs Nissan Skyline R34?",
                            PostDate = new DateTime(2024, 1, 22, 23, 11, 41, 919, DateTimeKind.Local).AddTicks(4004),
                            TagId = 4
                        },
                        new
                        {
                            PostId = 5,
                            PostAuthor = "Alex",
                            PostContent = "Nie mogę się doczekać premiery GTA VI!",
                            PostDate = new DateTime(2024, 1, 22, 23, 11, 41, 919, DateTimeKind.Local).AddTicks(4034),
                            TagId = 5
                        });
                });

            modelBuilder.Entity("Data.Entities.TagEntity", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TagTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TagId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            TagId = 1,
                            TagTitle = "Polityka"
                        },
                        new
                        {
                            TagId = 2,
                            TagTitle = "Sport"
                        },
                        new
                        {
                            TagId = 3,
                            TagTitle = "Nauka"
                        },
                        new
                        {
                            TagId = 4,
                            TagTitle = "Motoryzacja"
                        },
                        new
                        {
                            TagId = 5,
                            TagTitle = "Gry"
                        });
                });

            modelBuilder.Entity("Data.Entities.CommentEntity", b =>
                {
                    b.HasOne("Data.Entities.PostEntity", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Data.Entities.PostEntity", b =>
                {
                    b.HasOne("Data.Entities.TagEntity", "Tag")
                        .WithMany("Posts")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Data.Entities.PostEntity", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Data.Entities.TagEntity", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
