@model Post

<h1>Dodaj post</h1>
<form asp-action="Create" asp-controller="Post" method="post">

    <div class="mb-3">
        <label asp-for="PostContent">Zawartość</label>
        <input class="form-control" asp-for="PostContent" />
        <span class="text-danger" asp-validation-for="PostContent"></span>
    </div>

    <div class="mb-3">
        <label asp-for="PostAuthor">Autor wpisu</label>
        <input class="form-control" asp-for="PostAuthor" />
        <span class="text-danger" asp-validation-for="PostAuthor"></span>
    </div>

    <div class="form-group">
        <label asp-for="PostDate">Data publikacji</label>
        <input asp-for="PostDate" class="form-control" type="text" readonly value="@DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")">
        <span asp-validation-for="PostDate" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label class="mb-2" asp-for="TagId">Tag</label>
        <select class="form-control" asp-for="TagId"></select>
    </div>

    <div class="mb-3">
        <button type="submit" class="btn-primary">Utwórz</button>
    </div>

</form>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", async () => {
            const select = document.getElementById("TagId");

            try {
                const response = await fetch(`/api/tags`);

                if (!response.ok) {
                    throw "No OK, status " + response.status;
                }

                const json = await response.json();

                select.innerHTML = '';

                for (let item of json) {
                    let option = document.createElement('option');
                    option.setAttribute('value', item.id);
                    option.innerText = item.tagTitle;
                    select.appendChild(option);
                }
            } catch (e) {
                console.log('Can\'t get data from API', e);
            }
        });
    </script>
}